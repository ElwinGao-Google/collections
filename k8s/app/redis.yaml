apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: app-redis
spec:
  serviceName: app-redis
  replicas: 1
  selector:
    matchLabels:
      app: app-redis
  template:
    metadata:
      labels:
        app: app-redis
    spec:
      containers:
      - name: app-redis
        image: redis:latest
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - "/usr/local/etc/redis/redis.conf"
        ports:
        - containerPort: 6379
          name: app-redis
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: app-redis
  labels:
    app: app-redis
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    app: app-redis
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |
    maxmemory 1gb
    maxmemory-policy allkeys-lru
    aof-use-rdb-preamble yes
    protected-mode yes
    requirepass 123456
