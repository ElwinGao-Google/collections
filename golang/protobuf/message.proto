// MacOS: brew install protobuf
// go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
// protoc --go_out=. message.proto

// syntax = "proto3";
edition = "2023";   // protobuf的最新版本形式，可以同时支持proto2和proto3的功能
package main;
// 指定RPC文件生成路径地址与包名
option go_package ="./;main";	// “;”分割，前路径，后包名（可选，默认路径名）

import "google/protobuf/timestamp.proto";

message SimplePerson {
	string name = 1;
	bool male = 2;
	repeated int32 scores = 3;
}

message PartialPerson {
	string name = 1;
    int32 ext = 4;
}

message PersonBase {
	int32 id = 1;
	string name = 2;
	string email = 3;
}

enum PhoneType {
	PHONE_TYPE_UNSPECIFIED = 0;
	PHONE_TYPE_MOBILE = 1;
	PHONE_TYPE_HOME = 2;
	PHONE_TYPE_WORK = 3;
}

message ComplexPerson {
	PersonBase base = 1;

	message PhoneNumber {
		string number = 1;
		PhoneType type = 2;
	}

	repeated PhoneNumber phones = 2;

	google.protobuf.Timestamp last_updated = 3;
}

// Our address book file is just one of these.
message AddressBook {
	repeated SimplePerson simple_people = 1;
	repeated ComplexPerson complex_people = 2;
}

/* proto3不支持extensions功能，只有proto2和edition才支持 */

// A container message to hold stuff that a user has created.
message UserContent {
  extensions 100 to 199 [
    declaration = {
      number: 100,
      full_name: ".main.person",
      type: ".main.SimplePerson",
      repeated: true
    },
    // Ensures all field numbers in this extension range are declarations.
    verification = DECLARATION
  ];
}

// This extension allows person in a UserContent message.
extend UserContent {
  repeated SimplePerson person = 100;
}

